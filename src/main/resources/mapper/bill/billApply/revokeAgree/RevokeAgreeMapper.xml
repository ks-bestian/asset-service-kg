<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.repository.RevokeAgreeMapper">

	<select id="selectRevokeAgreeList" parameterType="java.util.HashMap"
            resultType="kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.vo.RevokeAgreeVo">
        /* QueryID : kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.repository.RevokeAgreeMapper.selectRevokeAgreeList */

		select
		    AA.bill_id
		  , kgst.fngetlangnm(AA.bill_name_kg,AA.bill_name_ru,AA.bill_name_kg,#{lang}) as bill_name -- 안건 이름
		  , kgst.fngetlangnm(vum.member_nm_kg,vum.member_nm_ru,vum.member_nm_kg,#{lang}) as ppsr_nm -- 제안자 이름
	      , AA.scl_dsc_rcp_nmb
	      , AA.ppsl_dt
	      , AA.stat_nm
	      , AA.stat_cd
	      , AA.na_term_cd
	      , AA.step_id
	      , AA.task_id
	      , AA.task_status
	      , ep.wt_dt
		from (
			select
			   pl.bill_id
			 , max(pl.bill_name_kg) as bill_name_kg
			 , max(pl.bill_name_ru) as bill_name_ru
			 , max(pl.current_step_id) as current_step_id
			 , max(pl.ppsr_id) as ppsr_id
			 , max(pl.ppsl_dt) as ppsl_dt
			 , max(pl.scl_dsc_rcp_nmb) as scl_dsc_rcp_nmb
			 , max(pl.reg_dt) as reg_dt
			 , max(pl.na_term_cd) as na_term_cd
			 , max(pl.step_id) as step_id
			 , max(pl.task_id) as task_id
			 , max(pl.task_status) as task_status
			 , max(ebs.stat_cd) as stat_cd
			 , kgst.fngetcodenm('1010',max(ebs.stat_cd),#{lang}) as stat_nm
			from kgst.view_bill_process_list pl
			join kgst.ebs_bp_step ebs on (pl.bp_df_id = ebs.bp_df_id and pl.current_step_id = ebs.step_id)
			where pl.step_id = '1100'
			  and pl.task_status = 'P'
			  and pl.trgt_user_id = #{userId}
			group by bill_id
		) AA
		join kgst.view_user_member vum on (AA.ppsr_id = vum.user_id)
		join kgst.ebs_proposer ep on (ep.bill_id = AA.bill_id and ep.proposer_id = #{userId} and ep.sign_dt is not null and ep.sign_cnc_dt is null)
        where 1=1
		<if test="naTermCd != null and naTermCd != ''">
			and AA.na_term_cd = #{naTermCd}
		</if>
		<if test="billName != null and billName != ''">
		    <if test="lang == 'lng_type_1' or lang == 'lng_type_3'">
		    	and AA.bill_name_kg like concat('%', #{billName}, '%')
		    </if>
		    <if test="lang == 'lng_type_2'">
		    	and AA.bill_name_ru like concat('%', #{billName}, '%')
		    </if>
		</if>
		<if test="statCd != null and statCd != ''">
			and AA.stat_cd = #{statCd}
		</if>

		order by AA.reg_dt desc

    </select>

    <select id="getRevokeAgreeDetail" parameterType="java.util.HashMap"
            resultType="kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.vo.RevokeAgreeVo">
        /* QueryID : kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.repository.RevokeAgreeMapper.getRevokeAgreeDetail */

		select
			em.bill_kind 		--안건종류
			, em.scl_dsc_rcp_nmb 							--사회토론번호
			, to_char(em.reg_dt, 'DD/MM/YYYY HH:MM') as regDate	-- 등록날짜
			, case
				when #{lang} = 'lng_type_1' then em.bill_name_kg
				else em.bill_name_ru
			end as billName		--안건이름
			, case
				when #{lang} = 'lng_type_1' then view.member_nm_kg
				else view.member_nm_ru
			end as ppsrNm		--발의자
			, case
				when #{lang} = 'lng_type_1' then em.etc_kg
				else em.etc_ru
			end as etc			--비고
			, case
				when #{lang} = 'lng_type_1' then em.wt_cn_kg
				else em.wt_cn_ru
			end as wt_cn		--철회사유
			, case
				when (ep.wt_dt is not null and ep.wt_cnc_dt is null) then 'Y'
				else 'N'
			 end as agreeYn
		from kgst.ebs_master em
			left join kgst.ebs_proposer ep on em.bill_id = ep.bill_id
			left join kgst.view_user_member view on view.member_id = em.ppsr_id
		where em.bill_id = #{billId}
			and ep.proposer_id = #{userId}
    </select>

    <select id="getProposerList" parameterType="java.util.HashMap"
            resultType="kr.co.bestiansoft.ebillservicekg.bill.billApply.revoke.vo.RevokeVo">
        /* QueryID : kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.repository.RevokeAgreeMapper.getProposerList */
		select
			ep.proposer_id					-- 제안자 대상
			, case
				when (ep.sign_dt is not null and ep.sign_cnc_dt is null) then 'Y'
				else 'N'
			 end as agreeYn 				-- 동의여부
			, case
				when (ep.wt_dt is not null and ep.wt_cnc_dt is null) then 'Y'
				else 'N'
			  end as revokeYn 				-- 철회동의여부   
			, view.member_nm_kg					-- 의원이름kg
			, view.member_nm_ru					-- 의원이름ru
			, view.poly_nm  					-- 정당이름
			, view.poly_cd 					-- 정당코드
		from kgst.ebs_proposer ep
			left join kgst.view_user_member view on view.member_id = ep.proposer_id
		where
			ep.bill_id = #{billId}
			and (sign_dt is not null and sign_cnc_dt is null)
    </select>

    <update id="updateRevokeAgree" parameterType="java.util.HashMap">
    	/* QueryID : kr.co.bestiansoft.ebillservicekg.bill.billApply.revokeAgree.repository.RevokeAgreeMapper.updateRevokeAgree */
		update kgst.ebs_proposer
		set
			mod_id = #{userId} 			-- 수정자 아이디
			, mod_dt = now()			-- 수정날짜
			<if test='agreeYn == "N"'> 	-- 서명 취소
			, wt_cnc_dt = now()
			</if>
			<if test='agreeYn == "Y"'> 	-- 서명 동의
			, wt_dt = now()
			, wt_cnc_dt = null
			</if>
		where
			bill_id = #{billId}
			and proposer_id = #{userId}
    </update>

</mapper>